@using RI.SolutionOwner.Web.Models;

@model SOSolutionPartnerContactsViewModel

@using (Html.BeginForm("CreateContact", "SOSolutionPartner", Model, FormMethod.Post, new { id = "contactForm", autocomplete = "off", @class = "form_components" }))
{
    <form class="form_components">
        <div class="row">
            <div class="col-lg-12 text-right">
                <div class="tooltip__block">
                    <button id="contact_add" type="button" class="btn btn-default" data-toggle="tooltip" data-placement="top" title="Add"><i class="icon-add" aria-hidden="true"></i></button>

                    <button id="contact_edit" type="button" class="btn btn-default" data-toggle="tooltip" data-placement="top" title="Edit"><i class="icon-edit" aria-hidden="true"></i></button>

                    <button type="button" onclick="deleteContact()" class="btn btn-default" data-toggle="tooltip" data-placement="top" title="Delete"> <i class="fa fa-trash-o delete" aria-hidden="true"></i></button>
                </div>
            </div>
        </div>

        <section id="add_contact_block" class="contact">
            <div class="row">
                @Html.HiddenFor(x => x.Id, new { id = "hiddenId" })
                @Html.HiddenFor(x => x.SolutionPartnerId, new { id = "hiddenSolutionPartnerId" })
                @Html.HiddenFor(x => x.CreatedDate, new { id = "hiddenCreatedDate" })
                <div class="col-lg-4">
                    <div class="form-group">
                        <label class="form-label" for="field-18">Person name<span class="mandatory_clr">*</span></label>
                        <div class="controls">
                            <input type="text" class="form-control" id="txtPersonName" value="@Model.PersonName" maxlength="50">
                            <span class="validationmessage" id="txtPersonNameError" style="color:red"></span>
                        </div>
                    </div>
                </div>
                <div class="col-lg-4">
                    <div class="form-group">
                        <label class="form-label" for="field-18">Designation<span class="mandatory_clr">*</span></label>
                        <div class="controls">
                            <input type="text" class="form-control" id="txtDesignation" value="@Model.Designation" maxlength="50">
                            <span class="validationmessage" id="txtDesignationError" style="color:red"></span>
                        </div>
                    </div>
                </div>
                <div class="col-lg-4">
                    <div class="form-group">
                        <label class="form-label" for="field-18">Work Phone</label>
                        <div class="controls">
                            <input type="text" class="form-control" id="txtPhoneWork" value="@Model.PhoneWork" maxlength="20">
                            <span class="validationmessage" id="txtPhoneWorkError" style="color:red"></span>
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-lg-4">
                    <div class="form-group">
                        <label class="form-label" for="field-18">Mobile Number</label>
                        <div class="controls">
                            <input type="text" class="form-control" id="txtPhonePersonal" value="@Model.PhonePersonal" maxlength="20">
                            <span class="validationmessage" id="txtPhonePersonalError" style="color:red"></span>
                        </div>
                    </div>
                </div>
                <div class="col-lg-4">
                    <div class="form-group">
                        <label class="form-label" for="field-18">Email</label>
                        <div class="controls">
                            <input type="text" class="form-control" id="txtEmail" value="@Model.EMail" maxlength="50">
                            <span class="validationmessage" id="txtEmailError" style="color:red"></span>
                        </div>
                    </div>
                </div>
                <div class="col-lg-4">
                    <div class="form-group">
                        <label class="form-label" for="field-18">Remarks</label>
                        <div class="controls">
                            <textarea class="form-control" cols="5" id="txtRemarks" value="@Model.Remarks" maxlength="200"></textarea>
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-lg-12 text-right">
                    <button type="button" id="add_contact_close" class="btn btn-default">Cancel</button>
                    <button type="button" id="add_contact_save" onclick="postAddressData(this)" class="btn save">Add</button>
                    <button type="button" id="add_contact_edit" onclick="postAddressData(this)" class="btn save">Update</button>
                </div>
            </div>
        </section>

        @*-------------------------// Contact table listing Begins //-------------------------*@
        <div class="row">
            <div class="col-lg-12">
                <div class="default_table">
                    <div class="table-responsive tbl-contact">
                        <table class="table m-t-sm">
                            <thead>
                                <tr>
                                    <th class="text-center">
                                        <div class="checkbox_style">
                                            <input type="checkbox" id="test1" />
                                            <label for="test1"></label>
                                        </div>
                                    </th>
                                    <th>Name</th>
                                    <th>Designation</th>
                                    <th>Work Phone</th>
                                    <th>Mobile</th>
                                    <th>Email</th>
                                    <th>Remarks</th>
                                </tr>
                            </thead>
                            <tbody>
                                @if (null != Model.ContactList && Model.ContactList.Any())
                                {
                                    foreach (var item in Model.ContactList)
                                    {
                                <tr>
                                    <td class="text-center">
                                        <div class="checkbox_style">
                                            <input type="checkbox" id="@item.Id" class="checkbox_click" onclick="CheckBoxChange('@item.Id','solutionPartnerContact')" />
                                            <label for="@item.Id"></label>
                                        </div>
                                    </td>
                                    <td>@item.PersonName</td>
                                    <td>@item.Designation</td>
                                    <td>@item.PhoneWork</td>
                                    <td>@item.PhonePersonal</td>
                                    <td>@item.EMail</td>
                                    <td>@item.Remarks</td>
                                </tr>
                                    }
                                }
                                else
                                {
                                <tr>
                                    <td colspan="7" class="text-center">No records to show.</td>
                                </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
        @*-------------------------// Contact table listing Ends //-------------------------*@

    </form>
}

<script>

    //----------------------// Show Create section //----------------------//
    $("#contact_add").click(function () {
        $('#add_contact_edit').hide();
        $('#add_contact_save').show();

        $("#hiddenId").val('');
        $("#txtPersonName").val('')
        $("#txtDesignation").val('');
        $("#txtPhoneWork").val('');
        $("#txtPhonePersonal").val('');
        $("#txtEmail").val('');
        $("#txtRemarks").val('');
        $("#hiddenCreatedDate").val('');

        $("#add_contact_block").slideDown("slow");
    });

    //----------------------// Show Edit section //----------------------//
    $("#contact_edit").click(function () {
        var id = GetCheckedContactId();
        if (null == id) {
            $("#add_contact_block").slideUp("slow");
            return false;
        }

        ShowProgress();
        $.ajax({
            url: '@Url.Action("GetContact", "SOSolutionPartner")',
            type: 'POST',
            data: { contactId: id },
            success: function (data) {
                if (data.Status == 1) {
                    $("#hiddenId").val(data.Data.Id);
                    //$("#hiddenSolutionPartnerId").val(data.Data.SolutionPartnerId)
                    $("#txtPersonName").val(data.Data.PersonName)
                    $("#txtDesignation").val(data.Data.Designation);
                    $("#txtPhoneWork").val(data.Data.PhoneWork);
                    $("#txtPhonePersonal").val(data.Data.PhonePersonal);
                    $("#txtEmail").val(data.Data.EMail);
                    $("#txtRemarks").val(data.Data.Remarks);
                    $("#hiddenCreatedDate").val(data.Data.CreatedDate);
                    hideProgress();
                }
                else {
                    hideProgress();
                    ShowAlert('Something wrong!', 'error');
                }
            },
            error: function (data) {
                hideProgress();
                ShowAlert('Something wrong!', 'error');
            }
        });

        $('#add_contact_save').hide();
        $('#add_contact_edit').show();
        $("#add_contact_block").slideDown("slow");
    });

    //----------------------// Create & Update Data //----------------------//
    function postAddressData(ctrl) {
        var PostURL = "";
        if (ctrl.id == "add_contact_save") {
            PostURL = "SOSolutionPartner/CreateContact";
        } else if (ctrl.id == "add_contact_edit") {
            PostURL = "SOSolutionPartner/EditContact";
        }
        var partnerId = CheckCheckboxCheckedOrUnchecked();
        if (null == partnerId) { return false; }
        var isValid = ValidateContact();
        if (!isValid) {
            return false;
        }

        ShowProgress();
        var postData = {
            Id: $("#hiddenId").val() || 0,
            SolutionPartnerId: partnerId,
            PersonName: $("#txtPersonName").val(),
            Designation: $("#txtDesignation").val(),
            PhoneWork: $("#txtPhoneWork").val(),
            PhonePersonal: $("#txtPhonePersonal").val(),
            EMail: $("#txtEmail").val(),
            Remarks: $("#txtRemarks").val(),
            CreatedDate: $("#hiddenCreatedDate").val() || new Date($.now),
        }
        $.ajax({
            url: PostURL,
            type: 'POST',
            data: postData,
            success: function (data) {
                if (data.Status == 1) {
                    hideProgress();
                    hideProgress();
                    ShowAlert(data.Message, 'success');
                    $('#solutionPartnerContact').empty();
                    $('#solutionPartnerContact').html(data.Data);
                }
                else {
                    hideProgress();
                    ShowAlert(data.Message, 'error');
                }
            },
            error: function (data) {
                hideProgress();
                ShowAlert('Something wrong!', 'error');
            }
        });
    }

    //----------------------// Delete contacts //----------------------//
    function deleteContact() {
        var contactId = GetCheckedContactId();
        var partnerId = CheckCheckboxCheckedOrUnchecked();
        bootbox.confirm("Are you sure to Remove this contact?", function (result) {
            if (result) {
                ShowProgress();
                $.ajax({
                    url: '@Url.Action("DeleteContact", "SOSolutionPartner")',
                    type: 'POST',
                    data: { contactId: contactId, partnerId: partnerId },
                    success: function (data) {
                        if (data.Status == 1) {
                            hideProgress();
                            hideProgress();
                            ShowAlert(data.Message, 'success');
                            $('#solutionPartnerContact').empty();
                            $('#solutionPartnerContact').html(data.Data);
                        }
                        else {
                            hideProgress();
                            ShowAlert(data.Message, 'error');
                        }
                    },
                    error: function (data) {
                        hideProgress();
                        ShowAlert('Something wrong!', 'error');
                    }
                });
            }
        });
    }


    //----------------------// Validate contacts //----------------------//
    function ValidateContact() {
        var isValid = true;
        if ($("#txtPersonName").val().trim() == "" || $("#txtPersonName").val().trim() == null) {
            $('#txtPersonNameError').html('Required field *');
            isValid = false;
        }
        else if (!validateTextOnly($("#txtPersonName").val())) {
            $('#txtPersonNameError').html('Text only *');
            isValid = false;
        }
        else {
            $('#txtPersonNameError').html('');
        }
        if ($("#txtDesignation").val().trim() == "" || $("#txtDesignation").val().trim() == null) {
            $('#txtDesignationError').html('Required field *');
            isValid = false;
        }
        else if (!validateTextNumberSpace($("#txtDesignation").val())) {
            $('#txtDesignationError').html('Text/Number only *');
            isValid = false;
        }
        else {
            $('#txtDesignationError').html('');
        }
        if ($("#txtEmail").val().trim() == "" || $("#txtEmail").val().trim() == null) {
            $('#txtEmailError').html('');
        }
        else if (!validateEmail($("#txtEmail").val())) {
            $('#txtEmailError').html('Invalid Email *');
            isValid = false;
        }
        else {
            $('#txtEmailError').html('');
        }
        if ($("#txtPhoneWork").val().trim() == "" || $("#txtPhoneWork").val().trim() == null) {
            $('#txtPhoneWorkError').html('');
        }
        else if (!validatePhoneNumber($("#txtPhoneWork").val())) {
            $('#txtPhoneWorkError').html('Invalid Phone number *');
            isValid = false;
        }
        else {
            $('#txtPhoneWorkError').html('');
        }
        if ($("#txtPhonePersonal").val().trim() == "" || $("#txtPhonePersonal").val().trim() == null) {
            $('#txtPhonePersonalError').html('');
        }
        else if (!validatePhoneNumber($("#txtPhonePersonal").val())) {
            $('#txtPhonePersonalError').html('Invalid Phone number *');
            isValid = false;
        }
        else {
            $('#txtPhonePersonalError').html('');
        }
        return isValid;
    }

    function GetCheckedContactId() {
        var id;
        $('#solutionPartnerContact').find(".checkbox_click").each(function () {
            if ($(this).prop('checked') == true) {
                id = $(this).attr('id');
            }
        });
        return id;
    }

    function validateTextOnly(myText) {
        var filter = /^[a-zA-Z ]+$/;
        if (filter.test(myText)) {
            return true;
        }
        else {
            return false;
        }
    }

    function validateTextNumberSpace(myText) {
        var filter = /^(?:[A-Za-z]+)(?:[A-Za-z0-9 _]*)$/;
        if (filter.test(myText)) {
            return true;
        }
        else {
            return false;
        }
    }

    function validatePhoneNumber(phone) {
        var filter = /^((\+[1-9]{1,4}[ \-]*)|(\([0-9]{2,3}\)[ \-]*)|([0-9]{2,4})[ \-]*)*?[0-9]{3,4}?[ \-]*[0-9]{3,4}?$/;
        if (filter.test(phone)) {
            return true;
        } else {
            return false;
        }
    }

    function validateEmail(myEmail) {
        var filter = /^([\w-\.]+)@@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.)|(([\w-]+\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\]?)$/;
        if (filter.test(myEmail)) {
            return true;
        }else{
            return false;
        }
    }

    $("#add_contact_close").click(function () {
        $("#add_contact_block").slideUp("slow");
    });


</script>