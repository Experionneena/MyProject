@using RI.SolutionOwner.Web.Models;

@model SPCategoryViewModel

@using (Html.BeginForm("AddCategory", "SPCategory", Model, FormMethod.Post, new { id = "addCategory", autocomplete = "off", @class = "form_components" }))
{
    @Html.HiddenFor(m => Model.Id, new { id = "modelId" })
    <div class="tab-content">
        <div role="tabpanel" class="tab-pane active" id="general">
            <div class="row">
                <div class="col-lg-6">
                    <div class="form-group">
                        <label class="form-label" for="field-1">Category name<span class="mandatory_clr">*</span></label>
                        <div class="controls">
                            @Html.TextBoxFor(m => Model.CategoryName, new { id = "categoryNameEdit", @class = "form-control", @maxlength = "100" })
                            <span class="validationmessage" id="categoryNameEditError" style="color:red"></span>
                        </div>
                    </div>
                </div>
                <div class="col-lg-6">
                    <div class="form-group">
                        <label class="form-label" for="field-1">Display name<span class="mandatory_clr">*</span></label>
                        <div class="controls">
                            @Html.TextBoxFor(m => Model.DisplayName, new { id = "displayNameEdit", @class = "form-control", @maxlength = "100" })
                            <span class="validationmessage" id="displayNameEditError" style="color:red"></span>
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-lg-12">
                    <div class="form-group">
                        <label class="form-label" for="field-2">Category description</label>
                        <div class="controls">
                            @Html.TextAreaFor(m => Model.CategoryDescription, new { id = "categoryDescriptionEdit", @class = "form-control", @maxlength = "100" })
                            <span class="validationmessage" id="categoryDescriptionEditError" style="color:red"></span>
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-lg-6">
                    <div class="form-group">
                        <label class="form-label" for="field-1">Icon Class<span class="mandatory_clr">*</span><a href="http://fontawesome.io/icons/" target="blank"><span class="fa fa-info-circle info-icon m-l-sm info-tooltip" data-html="true" data-toggle="tooltip" data-placement="bottom" title="http://fontawesome.io/icons/"></span></a></label>
                        <div class="controls">
                            <input type="text" class="form-control" id="iconClassEdit" value="@Model.IconClass">
                            <span class="validationmessage" id="iconClassEditError" style="color:red"></span>
                        </div>
                    </div>
                </div>
                <div class="col-lg-6">
                    <div class="form-group">
                        <label class="form-label">Parent</label>
                        <select class="form-control m-bot15" id="selectCategoryEdit">
                            <option value="">None</option>
                            @if (Model.CategoryNameList != null)
                            {
                                foreach (var item in Model.CategoryNameList)
                                {
                                    if (item.ParentId == null)
                                    {
                                        if (Model.ParentId == item.Id)
                                        {
                                            <option value="@item.Id" selected>@item.DisplayName</option>
                                        }
                                        else
                                        {
                                            <option value="@item.Id">@item.DisplayName</option>
                                        }
                                    }
                                }
                            }
                        </select>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-lg-6">
                    <div class="form-group">
                        <label class="form-label" for="field-1">Sort Order<span class="mandatory_clr">*</span></label>
                        <div class="controls">
                            <input type="text" class="form-control" id="sortOrderEdit" maxlength="3" value="@Model.SortOrder">
                            <span class="validationmessage" id="sortOrderEditError" style="color:red"></span>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="modal-footer form_btn_block">
        <button type="button" class="btn btn-default" data-dismiss="modal" id="categoryEditCancel">Cancel</button>
        <button type="button" class="btn save" id="categoryEditSaveButton">Save</button>
    </div>
}
<script>
    function validateCategoryName(name) {
        var filter = /^[a-zA-Z\s]+$/;
        if (filter.test(name)) {
            return true;
        }
        else {
            return false;
        }
    }
    function validateCategorySortOrder(num) {
        var filter = /^[0-9]*$/;
        if (filter.test(num)) {
            return true;
        }
        else {
            return false;
        }
    }
    function validateIconClass(icon) {
        var filter = /^[a-zA-Z \s\-]+$/;
        if (filter.test(icon)) {
            return true;
        }
        else {
            return false;
        }
    }
    window.prettyPrint() && prettyPrint();
    $('#categoryNameEdit').keyup(function (e) {
        $('#categoryNameEditError').html('');
    });
    $("#displayNameEdit").keyup(function (e) {
        $('#displayNameEditError').html('');
    });
    $("#categoryDescriptionEdit").keyup(function (e) {
        $('#categoryDescriptionEditError').html('');
    });
    $("#iconClassEdit").keyup(function (e) {
        $('#iconClassEditError').html('');
    });
    $("#sortOrderEdit").keyup(function (e) {
        $('#sortOrderEditError').html('');
    });
    $("#categoryEditSaveButton").click(function () {
        var iserror = false;
        if ($("#categoryNameEdit").val().trim() == '' || $("#categoryNameEdit").val().trim() == null) {
            $('#categoryNameEditError').html('CategoryName is required.');
            alert($("#txtcategoryNameEdit").val().trim());
        
        }
        else if (!validateCategoryName($("#categoryNameEdit").val().trim())) {
            $('#categoryNameEditError').html('Enter a valid name.');
            iserror = true;
        }
        else {
            $('categoryNameEditError').html('');
        }

        if ($("#displayNameEdit").val().trim() == '' || $("#displayNameEdit").val().trim() == null) {
            $('#displayNameEditError').html('DisplayName is required.');
            iserror = true;
        }
        else if (!validateCategoryName($("#displayNameEdit").val().trim())) {
            $('#displayNameEditError').html('Enter a valid name.');
            iserror = true;
        }
        else {
            $('#displayNameEditError').html('');
        }
        if ($("#categoryDescriptionEdit").val().trim() == '' || $("#categoryDescriptionEdit").val().trim() == null) {
            $('#categoryDescriptionEditError').html('Description required.');
            iserror = true;
        }
        else {
            $('#categoryDescriptionEditError').html('');
        }
        if ($("#iconClassEdit").val().trim() == '' || $("#iconClassEdit").val().trim() == null) {
            $('#iconClassEditError').html('Icon Class required.');
            iserror = true;
        }
        else if (!validateIconClass($("#iconClassEdit").val().trim())) {
            $('#iconClassEditError').html('Text only *');
            iserror = true;
        }
        else {
            $('#iconClassEditError').html('');
        }
        if ($("#sortOrderEdit").val().trim() == '' || $("#sortOrderEdit").val().trim() == null) {
            $('#sortOrderEditError').html('Sort Order required.');
            iserror = true;
           
        }
        else if (!validateCategorySortOrder($("#sortOrderEdit").val().trim())) {
            $('#sortOrderEditError').html('Enter number only.');
            iserror = true;
          
        }
        else {
            $('#sortOrderEditError').html('');
        }
        if (iserror) {
            return false;
        }

        ShowProgress();
        var postData = {
            Id: $("#modelId").val(),
            CategoryName: $("#categoryNameEdit").val(),
            DisplayName: $("#displayNameEdit").val(),
            CategoryDescription: $("#categoryDescriptionEdit").val(),
            IconClass: $("#iconClassEdit").val(),
            SortOrder: $("#sortOrderEdit").val(),
            ParentId: $("#selectCategoryEdit").val()
        }

        $.ajax({
            url: '@Url.Action("EditCategory", "SPCategory")',
            type: 'POST',
            data: postData,
            async: false,
            success: function (data) {

                if (data.Status == 1) {
                    hideProgress();
                    $('#partnerCategoryEditPopup').modal('hide');
                    $('#category_Grid').empty();
                    $('#category_Grid').html(data.Data);
                    $("#categoryNameEdit").val('');
                    $("#displayNameEdit").val('');
                    $("#categoryDescriptionEdit").html('');
                    $("#iconClassEdit").html('');
                    $("#sortOrderEdit").prop('checked', false);
                    ShowAlert(data.Message, 'success');
                }
                else {
                    hideProgress();
                    ShowAlert(data.Message, 'error');
                }
            },
            error: function (data) {
                hideProgress();
              
                $("#categoryNameEdit").val('');
                $("#displayNameEdit").val('');
                $("#categoryDescriptionEdit").html('');
                $("#iconClassEdit").html('');
                $("#sortOrderEdit").prop('checked', false);
                ShowAlert('Something wrong!', 'error');
            }
        });
    });
</script>
