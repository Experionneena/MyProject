@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_MainLayOut.cshtml";
}

@*POPUP FOR ADD ROLE*@
<div class="modal modal_c fade bs-example-modal-lg" tabindex="-1" role="dialog" aria-labelledby="myLargeModalLabels" id="roleAddPopup">
    <div class="modal-dialog modal-lg m-t-xxxl" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" id="btn_closeAddRole" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title" id="myModalLabel">Add Role</h4>
            </div>

            <div class="modal-body" id="roleAdd">
                @*@Html.Action("LoadAddRolePopUp", "Role")*@
                @*@Html.Partial("_AddPopUp")*@
            </div>
        </div>
    </div>
</div>
@*POPUP FOR EDIT ROLE*@
<div class="modal modal_c fade bs-example-modal-lg" tabindex="-1" role="dialog" aria-labelledby="myLargeModalLabel" id="roleEditPopup">
    <div class="modal-dialog modal-lg m-t-xxxl" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" id="btn_closeEditRole" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title" id="myModalLabel">Edit Role</h4>
            </div>
            <div class="modal-body" id="roleEdit">
                @*@Html.Partial("_EditPopUp")*@
            </div>
        </div>
    </div>
</div>

<section id="main-content">
    <div class="breadcrumb_block">
        <div class="col-xs-12">
            <div class="">
                <div class="pull-left">
                    <ol class="breadcrumb">
                        <li>
                            <a href="#">Home</a>
                        </li>

                        <li class="active">
                            Role Management
                        </li>
                    </ol>
                </div>
            </div>
            <div class="col-lg-8 col-md-8 col-sm-8 text-right pull-right">
                <div class="tooltip__block">
                    <div class="modal_btn_click" data-toggle="modal" data-target="#add_feature">
                        <button type="button" id="btnAddRole" class="btn btn-default" data-toggle="tooltip" data-placement="bottom" title="Add"> <i class="icon-add" aria-hidden="true"></i></button>
                    </div>
                    <div class="modal_btn_click" data-toggle="modal" data-target="#edit_feature">

                        <button type="button" class="btn btn-default disabletool" data-toggle="tooltip" data-placement="bottom" title="Edit" id="btn_EditPopupRole"><i class="icon-edit" aria-hidden="true"></i></button>
                    </div>


                    <button type="button" id="btnActivateRole" class="btn btn-default disabletool" data-toggle="tooltip" data-placement="bottom" title="Activate"> <i class="icon-done" aria-hidden="true"></i></button>


                    <button type="button" id="btnDeactivateRole" class="btn btn-default disabletool" data-toggle="tooltip" data-placement="bottom" title="Deactivate"><i class="icon-block" aria-hidden="true"></i></button>


                    <button type="button" class="btn btn-default disabletool" data-toggle="tooltip" data-placement="bottom" title="Delete" id="btn_DeleteRole"><i class="fa fa-trash-o" aria-hidden="true"></i></button>
                </div>

            </div>
        </div>
    </div>

    <section class="wrapper main-wrapper row mt0">

        <div class="row">
            <div class="col-lg-12" id="role_Grid">

            </div>
        </div>
    </section>
</section>
<script src="~/assets/js/jquery.aCollapTable.min.js"></script>
<script src="~/Js/Common.js"></script>
<script>
    $(document).ready(function () {
        //-----------------------------------// Disable management tools on page load //-----------------------------------//
        $('[rel=tooltip]').tooltip({ trigger: "hover" });
        if (!$('input.checkbox_click').is(':checked')) {

            $('.disabletool').attr("disabled", "disabled");

        } else {
            $('.disabletool').removeAttr("disabled", "disabled");

        }
        $('#btnAddRole').click(function () {
            ShowProgress();
            $.ajax({
                url: '@Url.Action("LoadAddRolePopUp", "Role")',
                type: 'POST',
                success: function (data) {
                    if (data.Status == 1) {
                        $('#roleAdd').empty();
                        $('#roleAdd').html(data.Data);
                        $('#roleAddPopup').modal({ backdrop: 'static', keyboard: false });
                        $('.checkbox_click').prop('checked', false);
                        $('#tblAddRole').aCollapTable({
                            startCollapsed: true,
                            addColumn: true,
                            plusButton: '<i class="glyphicon glyphicon-plus"></i> ',
                            minusButton: '<i class="glyphicon glyphicon-minus"></i> '
                        });

                        hideProgress();
                    }
                    else if (data.Status == 0) {
                        hideProgress();
                        ShowAlert(data.Message, 'error');
                    }
                    else {
                        hideProgress();
                        ShowAlert(data.Message, 'error');
                    }

                },

                error: function (data) {
                    hideProgress();
                    ShowAlert('Something wrong!', 'error');
                }
            });
            DisableTool();
            $(this).tooltip('hide');
        });

        $('#tblEditRole').aCollapTable({
            startCollapsed: true,
            addColumn: true,
            plusButton: '<i class="glyphicon glyphicon-plus"></i> ',
            minusButton: '<i class="glyphicon glyphicon-minus"></i> '
        });


        GetRoleGridDetails();
        function GetRoleGridDetails() {
            ShowProgress();
            $.ajax({
                url: '@Url.Action("GetRoles", "Role")',
                type: 'POST',
                success: function (data) {
                    if (data.Status == 1) {
                        $('#role_Grid').empty();
                        $('#role_Grid').html(data.Data);
                        hideProgress();
                    }
                    else if (data.Status == 0) {
                        hideProgress();
                        ShowAlert(data.Message, 'error');
                    }
                    else {
                        hideProgress();
                        ShowAlert(data.Message, 'error');
                    }

                },

                error: function (data) {
                    hideProgress();
                    ShowAlert('Something wrong!', 'error');
                }
            });
        }
        function CheckCheckboxCheckedOrUnchecked() {
            var id;
            $(".checkbox_click").each(function () {
                if ($(this).prop('checked') == true) {
                    id = $(this).attr('id');
                }
            });
            return id;
        }
        var dictIndex = [];
        $("#btn_EditPopupRole").click(function () {
            var id = CheckCheckboxCheckedOrUnchecked();
            if (id != null) {
                ShowProgress();
                $.ajax({
                    url: '@Url.Action("LoadEditRolePopUp", "Role")',
                    type: 'POST',
                    data: { id: id },
                    success: function (data) {
                        if (data.Status == 1) {
                            hideProgress();
                            $('#roleEditPopup').modal({ backdrop: 'static', keyboard: false });
                            $('#roleEdit').empty();
                            $('#roleEdit').html(data.Data);
                            $('.checkbox_click').prop('checked', false);
                            if (data.IsActive == true) {
                                $("#isActiveCheckbox").prop('checked', true);
                            }
                            else {
                                $("#isActiveCheckbox").prop('checked', false);
                            }

                            for (var i = 0; i < data.checkedPermissions.length; i++) {
                                $("#" + data.checkedPermissions[i]).prop('checked', true);
                            }
                            GetsheckboxvaluesForDropdownEdit();
                            for (var x = 0; x < dictIndex.length; x++) {
                                markup = "<option value='" + dictIndex[x].value + "'>" + dictIndex[x].key + "</option>";
                                $('#ddlMenuListEdit').append(markup);
                            }
                            var selectedHomePage = data.SelectedHomePage;
                            $('#ddlMenuListEdit option[value=' + selectedHomePage + ']').attr("selected", "selected");
                            $('#tblEditRole').aCollapTable({
                                startCollapsed: true,
                                addColumn: true,
                                plusButton: '<i class="glyphicon glyphicon-plus"></i> ',
                                minusButton: '<i class="glyphicon glyphicon-minus"></i> '
                            });
                        }
                        else if (data.Status == 0) {
                            hideProgress();
                            ShowAlert(data.Message, 'error');
                        }
                        else {
                            hideProgress();
                            ShowAlert(data.Message, 'error');
                        }

                    },

                    error: function (data) {
                        hideProgress();
                        ShowAlert('Something wrong!', 'error');
                    }
                });
            }
            DisableTool();
            $(this).tooltip('hide');
        });
        function GetsheckboxvaluesForDropdownEdit() {
            dictIndex = [];
            $("[id*='featureIdEdit_']").each(function (e) {
                if ($("#readcheckboxEdit_" + $(this).attr('id').split('_')[1]).prop("checked")) {
                    dictIndex.push({
                        key: $('#featureNameEdit_' + $(this).attr('id').split('_')[1]).text(),
                        value: $(this).text()
                    });
                }
                else if ($("#createcheckboxEdit_" + $(this).attr('id').split('_')[1]).prop("checked")) {
                    dictIndex.push({
                        key: $('#featureNameEdit_' + $(this).attr('id').split('_')[1]).text(),
                        value: $(this).text()
                    });
                }
                else if ($("#updatecheckboxEdit_" + $(this).attr('id').split('_')[1]).prop("checked")) {
                    dictIndex.push({
                        key: $('#featureNameEdit_' + $(this).attr('id').split('_')[1]).text(),
                        value: $(this).text()
                    });
                }
                else if ($("#deletecheckboxEdit_" + $(this).attr('id').split('_')[1]).prop("checked")) {
                    dictIndex.push({
                        key: $('#featureNameEdit_' + $(this).attr('id').split('_')[1]).text(),
                        value: $(this).text()
                    });
                }
                else if ($("#deactivatecheckboxEdit_" + $(this).attr('id').split('_')[1]).prop("checked")) {
                    dictIndex.push({
                        key: $('#featureNameEdit_' + $(this).attr('id').split('_')[1]).text(),
                        value: $(this).text()
                    });
                }
                else if ($("#approvecheckboxEdit_" + $(this).attr('id').split('_')[1]).prop("checked")) {
                    dictIndex.push({
                        key: $('#featureNameEdit_' + $(this).attr('id').split('_')[1]).text(),
                        value: $(this).text()
                    });
                }
            });
            $("[id*='featureIdSubEdit_']").each(function (e) {
                if ($("#readcheckboxEdit_" + $(this).attr('id').split('_')[1]).prop("checked")) {
                    dictIndex.push({
                        key: $('#featureNameEdit_' + $(this).attr('id').split('_')[1]).text(),
                        value: $(this).text()
                    });
                }
                else if ($("#createcheckboxEdit_" + $(this).attr('id').split('_')[1]).prop("checked")) {
                    dictIndex.push({
                        key: $('#featureNameEdit_' + $(this).attr('id').split('_')[1]).text(),
                        value: $(this).text()
                    });
                }
                else if ($("#updatecheckboxEdit_" + $(this).attr('id').split('_')[1]).prop("checked")) {
                    dictIndex.push({
                        key: $('#featureNameEdit_' + $(this).attr('id').split('_')[1]).text(),
                        value: $(this).text()
                    });
                }
                else if ($("#deletecheckboxEdit_" + $(this).attr('id').split('_')[1]).prop("checked")) {
                    dictIndex.push({
                        key: $('#featureNameEdit_' + $(this).attr('id').split('_')[1]).text(),
                        value: $(this).text()
                    });
                }
                else if ($("#deactivatecheckboxEdit_" + $(this).attr('id').split('_')[1]).prop("checked")) {
                    dictIndex.push({
                        key: $('#featureNameEdit_' + $(this).attr('id').split('_')[1]).text(),
                        value: $(this).text()
                    });
                }
                else if ($("#approvecheckboxEdit_" + $(this).attr('id').split('_')[1]).prop("checked")) {
                    dictIndex.push({
                        key: $('#featureNameEdit_' + $(this).attr('id').split('_')[1]).text(),
                        value: $(this).text()
                    });
                }
            });
            return dictIndex;
        }
        $("#btn_DeleteRole").click(function () {
            var idForDelete = CheckCheckboxCheckedOrUnchecked();
            if (idForDelete != null) {
                bootbox.confirm("Are you sure you want to delete?", function (result) {
                    if (result) {
                        ShowProgress();
                        $.ajax({
                            url: '@Url.Action("DeleteRole", "Role")',
                            type: 'POST',
                            data: { id: idForDelete },
                            success: function (data) {
                                if (data.Status == 1) {
                                    hideProgress();
                                    $('#role_Grid').empty();
                                    $('#role_Grid').html(data.Data);
                                    $('.checkbox_click').prop('checked', false);
                                    ShowAlert(data.Message, 'success');
                                }
                                else if (data.Status == 0) {
                                    hideProgress();
                                    $('.checkbox_click').prop('checked', false);
                                    ShowAlert(data.Message, 'error');
                                }
                                else {
                                    hideProgress();
                                    $('.checkbox_click').prop('checked', false);
                                    ShowAlert(data.Message, 'error');
                                }
                            },
                            error: function (data) {
                                hideProgress();
                                ShowAlert('Something wrong!', 'error');
                            }
                        });
                    }
                    else {
                        $('.checkbox_click').prop('checked', false);
                    }
                });
            }
            DisableTool();
            $(this).tooltip('hide');
        });

        $("#btn_closeAddRole").click(function () {
            $("#txtRoleName").val('');
            $("#txtRoleDesc").val('');
            $("#txtRoleNameError").html('');
            $("#txtdescerror").html('');
            $(".clearIsChecked").prop('checked', false);
            $("#isActive").prop('checked', false);
            $("#ddlMenuListAdd option").remove();
            $('#ddlError').html('');
            $('#roleAddPopup').modal('hide');
            DisableTool();
        });
       
        $("#btn_closeEditRole").click(function () {
            $("#txtRoleNameEdit").val('');
            $("#txtRoleDescEdit").val('');
            $("#txtRoleNameErrorEdit").html('');
            $("#txtDescErrorEdit").html('');
            $("#roleStatuscheckbox").prop('checked', false);
            $('#roleEditPopup').modal('hide');
            $(".clearIsChecked").prop('checked', false);
            $("#isActiveCheckbox").prop('checked', false);
            $("#ddlMenuListEdit option").remove();
            $('#ddlErrorEdit').html('');
            DisableTool();
        });
       
        $('#btnActivateRole').click(function () {
            var id = CheckCheckboxCheckedOrUnchecked();
            if (id != null) {
                bootbox.confirm("Are you sure you want to Activate this Role?", function (result) {
                    if (result) {
                        $.ajax({
                            url: '@Url.Action("ActivateRole", "Role")',
                            type: 'POST',
                            data: { id: id },
                            success: function (data) {
                                if (data.Status == 1) {
                                    hideProgress();
                                    $('#role_Grid').empty();
                                    $('#role_Grid').html(data.Data);
                                    $('.checkbox_click').prop('checked', false);
                                    ShowAlert(data.Message, 'success');
                                }
                                else if (data.Status == 0) {
                                    hideProgress();
                                    $('.checkbox_click').prop('checked', false);
                                    ShowAlert(data.Message, 'warning');
                                }
                                else {
                                    hideProgress();
                                    $('.checkbox_click').prop('checked', false);
                                    ShowAlert('Something wrong!', 'error');
                                }
                            },
                            error: function (data) {
                                hideProgress();
                                $('.checkbox_click').prop('checked', false);
                                ShowAlert(data.Message, 'error');
                            }
                        });
                    }
                    else {
                        $('.checkbox_click').prop('checked', false);
                    }
                });
            }
            DisableTool();
            $(this).tooltip('hide');
        });


        $('#btnDeactivateRole').click(function () {
            var id = CheckCheckboxCheckedOrUnchecked();
            if (id != null) {
                bootbox.confirm("Are you sure you want to Deactivate this Role?", function (result) {
                    if (result) {
                        $.ajax({
                            url: '@Url.Action("DeactivateRole", "Role")',
                            type: 'POST',
                            data: { id: id },
                            success: function (data) {
                                if (data.Status == 1) {
                                    hideProgress();
                                    $('#role_Grid').empty();
                                    $('#role_Grid').html(data.Data);
                                    $('.checkbox_click').prop('checked', false);
                                    ShowAlert(data.Message, 'success');
                                }
                                else if (data.Status == 0) {
                                    hideProgress();
                                    $('.checkbox_click').prop('checked', false);
                                    ShowAlert(data.Message, 'warning');
                                }
                                else {
                                    hideProgress();
                                    $('.checkbox_click').prop('checked', false);
                                    ShowAlert(data.Message, 'error');
                                }
                            },
                            error: function (data) {
                                hideProgress();
                                $('.checkbox_click').prop('checked', false);
                                ShowAlert('Something wrong!', 'error');
                            }
                        });
                    }
                    else {
                        $('.checkbox_click').prop('checked', false);
                    }
                });
            }
            DisableTool();
            $(this).tooltip('hide');
        });
    });
    $('.wraplist li a').each(function (index, value) {
        if ($(this).attr('href') == '/Role/Index') {
            $(this).parent().addClass('open');
            return;
        }
    })
</script>