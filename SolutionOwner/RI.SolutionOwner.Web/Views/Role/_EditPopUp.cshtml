@using RI.SolutionOwner.Web.Models;

@{
    var SelectedHomePage = "";
}

@model RoleViewModel

@using (Html.BeginForm("EditRole", "Role", Model, FormMethod.Post, new { id = "editRole", autocomplete = "off", @class = "form_components" }))
{
    @Html.HiddenFor(m => Model.Id, new { id = "hiddenId" })
    @Html.HiddenFor(m => Model.CreatedDate, new { id = "hiddenCreatedDate" })
    <div class="tab-content">
        <div role="tabpanel" class="tab-pane active" id="general">
            <div class="row">
                <div class="col-lg-6">
                    <div class="form-group">
                        <label class="form-label" for="field-3">Role name<span class="mandatory_clr">*</span></label>
                        <div class="controls">
                            @Html.TextBoxFor(m => Model.RoleName, new { id = "txtRoleNameEdit", @class = "form-control", @maxlength = "100", PlaceHolder = "RoleName" })
                            <span class="validationmessage" id="txtRoleNameErrorEdit"></span>
                        </div>
                    </div>
                </div>
                <div class="col-lg-6">
                    <div class="form-group">
                        <label class="form-label" for="field-4">Role description</label>
                        <div class="controls">
                            @Html.TextAreaFor(m => Model.Description, new { id = "txtRoleDescEdit", @class = "form-control", @maxlength = "150", PlaceHolder = "Description" })
                            <span class="validationmessage" id="txtDescErrorEdit"></span>
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                @*<div class="col-lg-4">
                        <div class="form-group">
                            <div class="checkbox_style">
                                <input type="checkbox" id="isActiveCheckbox" checked="checked" /><label for="isActiveCheckbox">Is Active ?</label>
                            </div>
                        </div>
                    </div>*@
            </div>
            <div class="row">
                <div class="col-lg-12">
                    <div class="default_table">
                        <div class="table-responsive">
                            <table class="table" id="tblEditRole">
                                <thead>
                                    <tr>
                                        <th>Feature name</th>
                                        <th class="text-center">Read</th>
                                        <th class="text-center">Create</th>
                                        <th class="text-center">Update</th>
                                        <th class="text-center">Approve</th>
                                        <th class="text-center">Deactivate</th>
                                        <th class="text-center">Delete</th>
                                    </tr>
                                </thead>
                                <tbody class="modal_table_body check_data editFeaturePermission">
                                    @for (var i = 0; i < Model.CategoryList.Count(); i++)
                                    {
                                        var category = Model.CategoryList.ToList()[i];
                                        <tr data-id="category_@i" data-parent="" class="mainCategory">
                                            <td>@category.DisplayName</td>
                                            <td class="text-center"></td>
                                            <td class="text-center"></td>
                                            <td class="text-center"></td>
                                            <td class="text-center"></td>
                                            <td class="text-center"></td>
                                            <td class="text-center"></td>
                                        </tr>
                                        if (category.FeatureList != null)
                                        {
                                            for (var j = 0; j < category.FeatureList.Count(); j++)
                                            {
                                                var feature = category.FeatureList.ToList()[j];
                                                <tr data-id="featureCategory_@j" data-parent="category_@i" id="featureList1">
                                                    <td id="featureNameEdit_@feature.Id">@feature.DisplayName</td>
                                                    <td style="display:none" id="featureIdEdit_@feature.Id">@feature.Id</td>
                                                    <td class="text-center">
                                                        <div class="form-group">
                                                            <div class="checkbox_style">
                                                                <input type="checkbox" class="clearIsChecked" id="readcheckboxEdit_@feature.Id" /><label for="readcheckboxEdit_@feature.Id"></label>
                                                            </div>
                                                        </div>
                                                    </td>
                                                    <td class="text-center">
                                                        <div class="form-group">
                                                            <div class="checkbox_style">
                                                                <input type="checkbox" class="clearIsChecked" id="createcheckboxEdit_@feature.Id" /><label for="createcheckboxEdit_@feature.Id"></label>
                                                            </div>
                                                        </div>
                                                    </td>
                                                    <td class="text-center">
                                                        <div class="form-group">
                                                            <div class="checkbox_style">
                                                                <input type="checkbox" class="clearIsChecked" id="updatecheckboxEdit_@feature.Id" /><label for="updatecheckboxEdit_@feature.Id"></label>
                                                            </div>
                                                        </div>
                                                    </td>
                                                    <td class="text-center">
                                                        <div class="form-group">
                                                            <div class="checkbox_style">
                                                                <input type="checkbox" class="clearIsChecked" id="approvecheckboxEdit_@feature.Id" /><label for="approvecheckboxEdit_@feature.Id"></label>
                                                            </div>
                                                        </div>
                                                    </td>
                                                    <td class="text-center">
                                                        <div class="form-group">
                                                            <div class="checkbox_style">
                                                                <input type="checkbox" class="clearIsChecked" id="deactivatecheckboxEdit_@feature.Id" /><label for="deactivatecheckboxEdit_@feature.Id"></label>
                                                            </div>
                                                        </div>
                                                    </td>
                                                    <td class="text-center">
                                                        <div class="form-group">
                                                            <div class="checkbox_style">
                                                                <input type="checkbox" class="clearIsChecked" id="deletecheckboxEdit_@feature.Id" /><label for="deletecheckboxEdit_@feature.Id"></label>
                                                            </div>
                                                        </div>
                                                    </td>
                                                </tr>
                                            }
                                        }
                                        if (category.Children != null)
                                        {
                                            for (var k = 0; k < category.Children.Count(); k++)
                                            {
                                                var subCategoryList = category.Children.ToList()[k];
                                                <tr data-id="subCategory_@k" data-parent="category_@i" class="subCategory">
                                                    <td>@subCategoryList.DisplayName</td>
                                                    <td class="text-center"></td>
                                                    <td class="text-center"></td>
                                                    <td class="text-center"></td>
                                                    <td class="text-center"></td>
                                                    <td class="text-center"></td>
                                                    <td class="text-center"></td>
                                                </tr>
                                                for (var L = 0; L < subCategoryList.FeatureList.Count(); L++)
                                                {
                                                    var features = subCategoryList.FeatureList.ToList()[L];
                                                    <tr data-id="featureSub_@L" data-parent="subCategory_@k" id="featureList2">
                                                        <td id="featureNameEdit_@features.Id">@features.DisplayName</td>
                                                        <td style="display:none" id="featureIdSubEdit_@features.Id">@features.Id</td>
                                                        <td class="text-center">
                                                            <div class="form-group">
                                                                <div class="checkbox_style">
                                                                    <input type="checkbox" class="clearIsChecked" id="readcheckboxEdit_@features.Id" /><label for="readcheckboxEdit_@features.Id"></label>
                                                                </div>
                                                            </div>
                                                        </td>
                                                        <td class="text-center">
                                                            <div class="form-group">
                                                                <div class="checkbox_style">
                                                                    <input type="checkbox" class="clearIsChecked" id="createcheckboxEdit_@features.Id" /><label for="createcheckboxEdit_@features.Id"></label>
                                                                </div>
                                                            </div>
                                                        </td>
                                                        <td class="text-center">
                                                            <div class="form-group">
                                                                <div class="checkbox_style">
                                                                    <input type="checkbox" class="clearIsChecked" id="updatecheckboxEdit_@features.Id" /><label for="updatecheckboxEdit_@features.Id"></label>
                                                                </div>
                                                            </div>
                                                        </td>
                                                        <td class="text-center">
                                                            <div class="form-group">
                                                                <div class="checkbox_style">
                                                                    <input type="checkbox" class="clearIsChecked" id="approvecheckboxEdit_@features.Id" /><label for="approvecheckboxEdit_@features.Id"></label>
                                                                </div>
                                                            </div>
                                                        </td>
                                                        <td class="text-center">
                                                            <div class="form-group">
                                                                <div class="checkbox_style">
                                                                    <input type="checkbox" class="clearIsChecked" id="deactivatecheckboxEdit_@features.Id" /><label for="deactivatecheckboxEdit_@features.Id"></label>
                                                                </div>
                                                            </div>
                                                        </td>
                                                        <td class="text-center">
                                                            <div class="form-group">
                                                                <div class="checkbox_style">
                                                                    <input type="checkbox" class="clearIsChecked" id="deletecheckboxEdit_@features.Id" /><label for="deletecheckboxEdit_@features.Id"></label>
                                                                </div>
                                                            </div>
                                                        </td>
                                                    </tr>
                                                }
                                            }
                                        }
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-lg-6">
                    <div class="form-group">
                        <label class="form-label nrm">Default Home Page<span class="mandatory_clr">*</span></label>
                        @Html.DropDownListFor(m => Model.SOMenuId, new List<SelectListItem>(), "select", new { id = "ddlMenuListEdit", @class = "form-control" })
                        <span class="validationmessage" id="ddlErrorEdit"></span>
                    </div>
                </div>
            </div>

        </div>
    </div>


    <div class="modal-footer form_btn_block">
        <button type="button" class="btn btn-default" id="btn_cancelEditRole">Cancel</button>
        <button type="button" class="btn save" id="btn_EditRole">Update</button>
    </div>
}
<script>
    $(document).ready(function () {
        var dict = [];
        var featureList = [];
        function GetcheckboxvaluesForDropdownEdit() {
            dict = [];
            $("[id*='featureIdEdit_']").each(function (e) {
                if ($("#readcheckboxEdit_" + $(this).attr('id').split('_')[1]).prop("checked")) {
                    dict.push({
                        key: $('#featureNameEdit_' + $(this).attr('id').split('_')[1]).text(),
                        value: $(this).text()
                    });
                }
                else if ($("#createcheckboxEdit_" + $(this).attr('id').split('_')[1]).prop("checked")) {
                    dict.push({
                        key: $('#featureNameEdit_' + $(this).attr('id').split('_')[1]).text(),
                        value: $(this).text()
                    });
                }
                else if ($("#updatecheckboxEdit_" + $(this).attr('id').split('_')[1]).prop("checked")) {
                    dict.push({
                        key: $('#featureNameEdit_' + $(this).attr('id').split('_')[1]).text(),
                        value: $(this).text()
                    });
                }
                else if ($("#deletecheckboxEdit_" + $(this).attr('id').split('_')[1]).prop("checked")) {
                    dict.push({
                        key: $('#featureNameEdit_' + $(this).attr('id').split('_')[1]).text(),
                        value: $(this).text()
                    });
                }
                else if ($("#deactivatecheckboxEdit_" + $(this).attr('id').split('_')[1]).prop("checked")) {
                    dict.push({
                        key: $('#featureNameEdit_' + $(this).attr('id').split('_')[1]).text(),
                        value: $(this).text()
                    });
                }
                else if ($("#approvecheckboxEdit_" + $(this).attr('id').split('_')[1]).prop("checked")) {
                    dict.push({
                        key: $('#featureNameEdit_' + $(this).attr('id').split('_')[1]).text(),
                        value: $(this).text()
                    });
                }
            });
            $("[id*='featureIdSubEdit_']").each(function (e) {
                if ($("#readcheckboxEdit_" + $(this).attr('id').split('_')[1]).prop("checked")) {
                    dict.push({
                        key: $('#featureNameEdit_' + $(this).attr('id').split('_')[1]).text(),
                        value: $(this).text()
                    });
                }
                else if ($("#createcheckboxEdit_" + $(this).attr('id').split('_')[1]).prop("checked")) {
                    dict.push({
                        key: $('#featureNameEdit_' + $(this).attr('id').split('_')[1]).text(),
                        value: $(this).text()
                    });
                }
                else if ($("#updatecheckboxEdit_" + $(this).attr('id').split('_')[1]).prop("checked")) {
                    dict.push({
                        key: $('#featureNameEdit_' + $(this).attr('id').split('_')[1]).text(),
                        value: $(this).text()
                    });
                }
                else if ($("#deletecheckboxEdit_" + $(this).attr('id').split('_')[1]).prop("checked")) {
                    dict.push({
                        key: $('#featureNameEdit_' + $(this).attr('id').split('_')[1]).text(),
                        value: $(this).text()
                    });
                }
                else if ($("#deactivatecheckboxEdit_" + $(this).attr('id').split('_')[1]).prop("checked")) {
                    dict.push({
                        key: $('#featureNameEdit_' + $(this).attr('id').split('_')[1]).text(),
                        value: $(this).text()
                    });
                }
                else if ($("#approvecheckboxEdit_" + $(this).attr('id').split('_')[1]).prop("checked")) {
                    dict.push({
                        key: $('#featureNameEdit_' + $(this).attr('id').split('_')[1]).text(),
                        value: $(this).text()
                    });
                }
            });
            return dict;
        }

        function GetcheckboxvaluesForCreateRoleEdit() {
            featureList = [];
            $("[id*='featureIdEdit_']").each(function (e) {
                featureList.push({
                    FeatureName: $('#featureNameEdit_' + $(this).attr('id').split('_')[1]).text(),
                    FeatureId: $(this).text(),
                    CreatePermission: $("#createcheckboxEdit_" + $(this).attr('id').split('_')[1]).prop("checked"),
                    ReadPermission: $("#readcheckboxEdit_" + $(this).attr('id').split('_')[1]).prop("checked"),
                    UpdatePermission: $("#updatecheckboxEdit_" + $(this).attr('id').split('_')[1]).prop("checked"),
                    DeletePermission: $("#deletecheckboxEdit_" + $(this).attr('id').split('_')[1]).prop("checked"),
                    ApprovePermission: $("#approvecheckboxEdit_" + $(this).attr('id').split('_')[1]).prop("checked"),
                    ActivateOrDeactivatePermission: $("#deactivatecheckboxEdit_" + $(this).attr('id').split('_')[1]).prop("checked")
                });
            }),

        $("[id*='featureIdSubEdit_']").each(function (e) {
            featureList.push({
                FeatureName: $('#featureNameEdit_' + $(this).attr('id').split('_')[1]).text(),
                FeatureId: $(this).text(),
                CreatePermission: $("#createcheckboxEdit_" + $(this).attr('id').split('_')[1]).prop("checked"),
                ReadPermission: $("#readcheckboxEdit_" + $(this).attr('id').split('_')[1]).prop("checked"),
                UpdatePermission: $("#updatecheckboxEdit_" + $(this).attr('id').split('_')[1]).prop("checked"),
                DeletePermission: $("#deletecheckboxEdit_" + $(this).attr('id').split('_')[1]).prop("checked"),
                ApprovePermission: $("#approvecheckboxEdit_" + $(this).attr('id').split('_')[1]).prop("checked"),
                ActivateOrDeactivatePermission: $("#deactivatecheckboxEdit_" + $(this).attr('id').split('_')[1]).prop("checked")
            });
        });
            return featureList;
        }

        $('.clearIsChecked').change(function () {
            SelectedHomePage = $("#ddlMenuListEdit").val();
            $("#ddlMenuListEdit option").remove();
            LoadDropDown();
        });

        function LoadDropDown() {
            $('#ddlErrorEdit').html('');
            GetcheckboxvaluesForDropdownEdit();
            var selecttext = "<option value='" + '0' + "'>" + 'select' + "</option>";
            $('#ddlMenuListEdit').append(selecttext);
            for (var x = 0; x < dict.length; x++) {
                markup = "<option value='" + dict[x].value + "'>" + dict[x].key + "</option>";
                $('#ddlMenuListEdit').append(markup);
            }
            $('#ddlMenuListEdit option[value=' + SelectedHomePage + ']').attr("selected", "selected");
        }
        function validateName(name) {
            var filter = /^[a-z\d\-_\s]+$/i;
            if (filter.test(name)) {
                return true;
            }
            else {
                return false;
            }
        }
        $('#ddlMenuListEdit').change(function () {
            $('#ddlErrorEdit').html('');
        });

        $('#txtRoleNameEdit').keypress(function (e) {
            $('#txtRoleNameErrorEdit').html('');
        });
        $('#txtRoleDescEdit').keypress(function (e) {
            $('#txtDescErrorEdit').html('');
        });
        $("#btn_EditRole").click(function () {
            ////ShowProgress();
            var isError = false;
            if ($("#txtRoleNameEdit").val().trim() == "" || $("#txtRoleNameEdit").val().trim() == null) {
                $('#txtRoleNameErrorEdit').html('Required field');
                isError = true;
            }
            else if (!validateName($("#txtRoleNameEdit").val().trim())) {
                $('#txtRoleNameErrorEdit').html('Invalid entry');
                isError = true;
            }

            else {
                $('#txtRoleNameErrorEdit').html('');
            }
            if ($("#txtRoleDesc").val() != "") {
                if (!validateName($("#txtRoleDescEdit").val().trim())) {
                    $('#txtDescErrorEdit').html('Invalid entry.');
                    isError = true;
                }
                else {
                    $('#txtDescErrorEdit').html('');
                }
            }
            if ($("#ddlMenuListEdit").val() == "" || $("#ddlMenuListEdit").val() == null || $("#ddlMenuListEdit").val() == 0) {
                $('#ddlErrorEdit').html('Required field');
                isError = true;
            }
            else {
                $('#ddlErrorEdit').html('');
            }
            if (isError) {
                return false;
            }
            var featureListEdit = GetcheckboxvaluesForCreateRoleEdit()
            var postData = {
                Id: $("#hiddenId").val(),
                CreatedDate: $("#hiddenCreatedDate").val(),
                RoleName: $("#txtRoleNameEdit").val().trim(),
                Description: $("#txtRoleDescEdit").val().trim(),
                IsActive: $("#isActiveCheckbox").prop('checked'),
                SOMenuId: $("#ddlMenuListEdit").val(),
                RoleFeaturePermissionViewModel: featureListEdit
            }
            $.ajax({
                url: '@Url.Action("UpdateOwnerRole", "Role")',
                type: 'POST',
                data: postData,
                success: function (data) {
                    if (data.Status == 1) {
                        $('#roleEditPopup').modal('hide');
                        $('#role_Grid').empty();
                        $('#role_Grid').html(data.Data);
                        $('.checkbox_click').prop('checked', false);
                        ShowAlert(data.Message, 'success');
                    }
                    else if (data.Status == 0) {
                        $('#roleEditPopup').scrollTop(0);
                        var top = ($(window).scrollTop() || $("body").scrollTop());
                        ShowAlert(data.Message, 'error');
                    }
                    else {
                        $('#roleEditPopup').scrollTop(0);
                        var top = ($(window).scrollTop() || $("body").scrollTop());
                        ShowAlert('Something wrong!', 'error');
                    }

                },

                error: function (data) {
                    $('#roleEditPopup').scrollTop(0);
                    var top = ($(window).scrollTop() || $("body").scrollTop());
                    ShowAlert('Something wrong!', 'error');
                }
            });
        });

        $("#btn_cancelEditRole").click(function () {
            $("#txtRoleNameEdit").val('');
            $("#txtRoleDescEdit").val('');
            $("#txtRoleNameErrorEdit").html('');
            $("#txtDescErrorEdit").html('');
            $("#roleStatuscheckbox").prop('checked', false);
            $('#roleEditPopup').modal('hide');
            $(".clearIsChecked").prop('checked', false);
            $("#isActiveCheckbox").prop('checked', false);
            $("#ddlMenuListEdit option").remove();
            $('#ddlErrorEdit').html('');
            DisableTool();
        });
    });
</script>