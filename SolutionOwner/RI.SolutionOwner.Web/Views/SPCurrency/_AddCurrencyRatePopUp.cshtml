@using RI.SolutionOwner.Web.Models;

@model CurrencyRateModel

@using (Html.BeginForm("AddCurrency", "SPCurrencyRate", Model, FormMethod.Post, new { id = "addCurrency", autocomplete = "off", @class = "form_components" }))
{
<div class="row">
    <div class="col-lg-6">
        <div class="form-group">
            <label class="form-label" for="field-1">Currency<span class="mandatory_clr">*</span></label>
            <select id="currencyList" class="form-control m-bot15">
                @foreach (var item in Model.SymbolId)
                {
                    <option value="@item.Value">@item.Key</option>
                }
            </select>
            <span class="validationmessage" id="dropDownErrorAdd" style="color: red"></span>
        </div>
    </div>

    <div class="col-lg-6">
        <div class="form-group">
            <label class="form-label" for="field-1">Rate<span class="mandatory_clr">*</span></label>
            <div class="controls">
                @Html.TextBoxFor(m => m.Rate, new { id = "txtRate", @class = "form-control", @maxlength = "7", PlaceHolder = "Rate",  })
                <span class="validationmessage" id="txtRateError" style="color:red"></span>
            </div>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-lg-6">
        <div class="form-group">
            <label class="form-label" for="field-2">Description</label>
            <div class="controls">
                @Html.TextBoxFor(m => m.CurrencyDescription, new { id = "txtDescription", @class = "form-control", @maxlength = "100", PlaceHolder = "Description" })
                <span class="validationmessage" id="txtDescriptionError" style="color:red"></span>
            </div>
        </div>
    </div>
</div>
<div class="row">
    <div class="col-lg-4">
        <div class="form-group">
            <div class="checkbox_style">
                <input type="checkbox" id="addCurrencyStatus" checked="checked" disabled/><label for="addCurrencyStatus">IsActive ?</label>
            </div>
        </div>
    </div>
</div>

<div class="modal-footer form_btn_block">
    <button type="button" class="btn btn-default" id="btn_cancel" data-dismiss="modal">Cancel</button>
    <button type="button" class="btn save" id="btn_currencysave">Save</button>
</div>

}
<script>

    $(document).ready(function () {

        $('#txtRate').keypress(function (event) {
            var $this = $(this);
            if ((event.which != 46 || $this.val().indexOf('.') != -1) &&
               ((event.which < 48 || event.which > 57) &&
               (event.which != 0 && event.which != 8))) {
                event.preventDefault();
            }

            var text = $(this).val();
            if ((event.which == 46) && (text.indexOf('.') == -1)) {
                setTimeout(function() {
                    if ($this.val().substring($this.val().indexOf('.')).length > 3) {
                        $this.val($this.val().substring(0, $this.val().indexOf('.') + 3));
                    }
                }, 1);
            }

            if ((text.indexOf('.') != -1) &&
                (text.substring(text.indexOf('.')).length > 3) &&
                (event.which != 0 && event.which != 8) &&
                ($(this)[0].selectionStart >= text.length - 3))
            {
                event.preventDefault();
            }      

            $('#txtRateError').html('');
        });


        $("#txtDescription").keypress(function (e) {
            $('#txtDescriptionError').html('');
        });
      
        // Function that validates name through a regular expression.
        function validateName(name) {
            var filter = /^[a-zA-Z\s]+$/;
            if (filter.test(name)) {
                return true;
            }
            else {
                return false;
            }
        }

        function validateRate(rate) {
            var filter = /^((\d{1,3})((\.\d{1,3})?))$/;
           
            if (filter.test(rate)) {
                return true;
            }
            else {
                return false;
            }
        }

        $("#btn_currencysave").click(function () {
            var iserror = false;
            var selectedCurrency = $('#currencyList :selected').val();

            if ($("#txtRate").val().trim() == "" || $("#txtRate").val().trim() == null) {
                $('#txtRateError').html('Enter a rate.');
                iserror = true;
            }

            else if (!validateRate($("#txtRate").val().trim())) {
                $('#txtRateError').html('Enter a decimal number between 0 and 1000.');
                iserror = true;
            }

            else {
                $('#txtRateError').html('');
            }

            if (!validateName($("#txtDescription").val().trim())) {
                $('#txtDescriptionError').html('Enter a valid description.');
                iserror = true;
            }

            else {
                $('txtDescriptionError').html('');
            }

            if (selectedCurrency == 0) {
                $('#dropDownErrorAdd').html('Select a currency.');
                iserror = true;
            }

            else {
                $('#dropDownErrorAdd').html('');
            }

            if (iserror) {
                return false;
            }

            ShowProgress();

            var postData = {
                CurrencyDescription: $("#txtDescription").val(),
                Rate: $("#txtRate").val(),
                IsActive: $("#addCurrencyStatus").prop("checked"),
                CurrencyId: selectedCurrency
            }

            $.ajax({
                url: '@Url.Action("CurrencyAdd", "SPCurrency")',
                type: 'POST',
                data: postData,
                success: function (data) {
                    if (data.Status == 1) {
                        hideProgress();
                        $('#currencyAddPopup').modal('hide');
                        $('#currency_Grid').empty();
                        $('#currency_Grid').html(data.Data);
                        ShowAlert(data.Message, 'success');
                    }
                    else {
                        hideProgress();
                        ShowAlert(data.Message, 'error');
                    }
                },
                error: function (data) {
                    hideProgress();
                    ShowAlert(data.Message, 'error');

                }

            });
            $("#btn_cancel").click(function () {
                $("#txtDescription").val('');
                $("#txtRate").val('');
                $("#txtDescriptionError").html('');
                $("#txtRateError").html('');
                $("#addCurrencyStatus").prop('checked', false);
                $('#currencyAddPopup').modal('hide');
            });

        });

    });
