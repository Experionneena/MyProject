@using RI.SolutionOwner.Web.Models;

@model CurrencyRateModel

@using (Html.BeginForm("UserEdit", "User", Model, FormMethod.Post, new { id = "editUser", autocomplete = "off", @class = "form_components" }))
{
    @Html.HiddenFor(m => Model.Id, new { id = "modelId" })

    <div class="row">
        <div class="col-lg-6">
            <div class="form-group">
                <label class="form-label" for="field-1">Currency<span class="mandatory_clr">*</span></label>
                <select id="currencyEditList" class="form-control m-bot15">
                    @foreach (var item in Model.SymbolId)
                    {
                        if (item.Value == Model.CurrencyId)
                        {
                            <option value="@item.Value" selected>@item.Key</option>
                        }
                        else
                        {
                            <option value="@item.Value">@item.Key</option>
                        }
                    }
                </select>
                <span class="validationmessage" id="dropDownErrorEdit" style="color: red"></span>
            </div>
        </div>

        <div class="col-lg-6">
            <div class="form-group">
                <label class="form-label" for="field-1">Rate<span class="mandatory_clr">*</span></label>
                <div class="controls">
                    @Html.TextBoxFor(m => m.Rate, new { id = "txtEditRate", @class = "form-control", @maxlength = "7", PlaceHolder = "Rate" })
                    <span class="validationmessage" id="txtEditRateError" style="color:red"></span>
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-lg-6">
            <div class="form-group">
                <label class="form-label" for="field-2">Description</label>
                <div class="controls">
                    @Html.TextBoxFor(m => m.CurrencyDescription, new { id = "txtEditDescription", @class = "form-control", @maxlength = "100", PlaceHolder = "Description" })
                    <span class="validationmessage" id="txtEditDescriptionError" style="color:red"></span>
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-lg-4">
            <div class="form-group">
                <div class="checkbox_style" style="display:none">
                    <input type="checkbox" id="editCurrencyStatus" checked="checked" /><label for="editCurrencyStatus">IsActive</label>
                </div>
            </div>
        </div>
    </div>

    <div class="modal-footer form_btn_block">
        <button type="button" class="btn btn-default" id="btn_edit_cancel" data-dismiss="modal">Cancel</button>
        <button type="button" class="btn save" id="btn_currencyEdit">Save</button>
    </div>

}
<script>
    $(document).ready(function () {

        $('#txtEditRate').keypress(function (event) {
            var $this = $(this);
            if ((event.which != 46 || $this.val().indexOf('.') != -1) &&
               ((event.which < 48 || event.which > 57) &&
               (event.which != 0 && event.which != 8))) {
                event.preventDefault();
            }

            var text = $(this).val();
            if ((event.which == 46) && (text.indexOf('.') == -1)) {
                setTimeout(function () {
                    if ($this.val().substring($this.val().indexOf('.')).length > 3) {
                        $this.val($this.val().substring(0, $this.val().indexOf('.') + 3));
                    }
                }, 1);
            }

            if ((text.indexOf('.') != -1) &&
                (text.substring(text.indexOf('.')).length > 3) &&
                (event.which != 0 && event.which != 8) &&
                ($(this)[0].selectionStart >= text.length - 3)) {
                event.preventDefault();
            }

            $('#txtEditRateError').html('');
        });

        $('#txtEditDescription').keypress(function (e) {
            $('#txtEditDescriptionError').html('');
        });

        // Function that validates name through a regular expression.
        function validateName(name) {
            var filter = /^[a-zA-Z]+$/;
            if (filter.test(name)) {
                return true;
            }
            else {
                return false;
            }
        }

        function validateRate(rate) {
            var filter = /^((\d{1,3})((\.\d{1,3})?))$/;

            if (filter.test(rate)) {
                return true;
            }
            else {
                return false;
            }
        }

        $("#btn_currencyEdit").click(function () {
            var isError = false;
            var selectedCurrency = $('#currencyEditList :selected').val();
           
            if ($("#txtEditRate").val().trim() == "" || $("#txtEditRate").val().trim() == null) {
                $('#txtEditRateError').html('Enter a rate.');
                isError = true;
               
            }
            else if (!validateRate($("#txtEditRate").val().trim())) {
                $('#txtEditRateError').html('Enter a decimal number between 0 and 1000.');
                isError = true;
            }

            else {
               
                $('#txtEditRateError').html('');
            }

            if (!validateName($("#txtEditDescription").val().trim())) {
                $('#txtEditDescriptionError').html('Enter a valid description.');
                isError = true;
               
            }

            else {
                
                $('#txtEditDescriptionError').html('');
            }

            if (selectedCurrency == 0) {               
                $('#dropDownErrorEdit').html('Select a currency.');
                isError = true;
            }

            else {               
                $('#dropDownErrorEdit').html('');
            }
           

            if (isError) {
               
                return false;
            }
           
            ShowProgress();
           
            var postData = {
                Id: $("#modelId").val(),
                CurrencyDescription: $("#txtEditDescription").val(),
                Rate: $("#txtEditRate").val(),
                IsActive: $("#editCurrencyStatus").prop("checked"),
                CurrencyId: selectedCurrency
            }
            
            $.ajax({
                url: '@Url.Action("CurrencyEdit", "SPCurrency")',
                type: 'POST',
                data: postData,
                success: function (data) {
                    if (data.Status == 1) {
                        hideProgress();
                        $('#currencyEditPopup').modal('hide');
                        $('#currency_Grid').empty();
                        $('#currency_Grid').html(data.Data);
                        ShowAlert(data.Message, 'success');
                    }
                    else {
                        hideProgress();
                        ShowAlert(data.Message, 'error');
                    }
                },
                error: function (data) {
                    hideProgress();
                    ShowAlert(data.Message, 'error');

                }

            });

            $("#btn_edit_cancel").click(function () {
                $("#txtEditDescription").val('');
                $("#txtEditRate").val('');
                $("#txtEditDescriptionError").html('');
                $("#txtEditRateError").html('');
                $("#editCurrencyStatus").prop('checked', false);
                $('#currencyEditPopup').modal('hide');
            });
        });
    });
</script>
